{"version":3,"sources":["images/70sbkgrnd.jpg","components/Navbar/index.js","components/Jumbotron/index.js","components/Footer/index.js","components/Pictures/index.js","components/Wrapper/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","react_default","a","createElement","className","response","score","topScore","myStyle","backgroundImage","Background","backgroundRepeat","backgroundPosition","backgroundSize","backgroundColor","color","Jumbotron","style","Footer","Pictures","onClick","clicked","id","alt","name","src","image","Wrapper","children","App","state","shuffledPics","pictureData","isClicked","Clicked","pics","randomInt","x","optArg","arguments","length","undefined","Math","floor","random","shuffled","i","push","splice","_this","newTopScore","console","log","setState","concat","newScore","_this2","this","components_Navbar","flex","components_Jumbotron","components_Wrapper","map","picture","components_Pictures","components_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88b21f8c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/70sbkgrnd.b6373fdc.jpg\";","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction Navbar(props) {\r\n    return(\r\n  \r\n        <nav className=\"navbar navbar-light bg-light\">\r\n            <span className=\"navbar-brand mb-0 h1\">Clicky Game</span>\r\n            <span>You guessed {props.response}</span>\r\n            <span>Score: {props.score}  |  Top Score: {props.topScore}</span>\r\n        </nav>\r\n      \r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport Background from '../../images/70sbkgrnd.jpg';\r\n\r\nvar myStyle = {\r\n    backgroundImage:\"url(\"+{Background}+\")\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"100%\",\r\n    backgroundColor: \"#e5771e\",\r\n    color: \"white\"\r\n}\r\n\r\nfunction Jumbotron(){\r\n        return(\r\n            <div  style={myStyle} className=\"myJumbotron jumbotron jumbotron-fluid\">\r\n                <div  className=\"container\">\r\n                    <h1 className=\"display-4\">That 70's Clicky Game</h1>\r\n                    <p className=\"lead\">Click on images to earn points, but don't click the same one twice!</p>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Jumbotron;","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction Footer(){\r\n    return(\r\n        <footer>\r\n            <h3>70's Clicky Game</h3>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction Pictures(props){\r\n    return(\r\n        <div className= \"card\">\r\n            <div className= \" img-container\">\r\n                <img  onClick={() => props.clicked(props.id)} alt= {props.name} src={props.image}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pictures;","import React from 'react';\r\nimport './style.css'\r\n\r\nfunction Wrapper(props){\r\n    return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;","import React, {Component} from 'react';\nimport Navbar from './components/Navbar';\nimport Jumbotron from './components/Jumbotron';\nimport Footer from './components/Footer';\nimport pictureData from './pictures.json';\nimport Pictures from './components/Pictures';\nimport Wrapper from './components/Wrapper';\n\n\n\nclass App extends Component {\n\n  state = {\n    shuffledPics: pictureData,\n    isClicked:[13],\n    response:\"\",\n    score:0,\n    topScore:0\n  };\n  \n  Clicked= id => {\n    var pics= \n    [\n      {\n        \"id\":1,\n        \"src\": \"https://i.pinimg.com/originals/4d/03/1e/4d031e0f7b5a331412e2654b09b0a244.jpg\",\n        \"name\": \"jackie burkhart\" \n      },\n      {\n        \"id\": 2,\n        \"src\": \"https://usercontent2.hubstatic.com/13152575_f520.jpg\",\n        \"name\": \"Steven Hyde\"\n      },\n      {\n        \"id\": 3,\n        \"src\": \"https://66.media.tumblr.com/5a6475e3ead509a5f3d02aeaa3f19d35/tumblr_pio2fmi6Z01tdxyhao7_250.png\",\n        \"name\": \"Donna Pinciotti\"\n      },\n      {\n        \"id\": 4,\n        \"src\": \"https://memegenerator.net/img/images/16645115.jpg\",\n        \"name\": \"Fez\"\n      },\n      {\n        \"id\": 5,\n        \"src\": \"https://cdn.playbuzz.com/cdn/UserImages/7da77efb-a5af-4aa9-bb85-1e81bef228ef.jpg\",\n        \"name\": \"Kitty Forman\"\n      },\n      {\n        \"id\": 6,\n        \"src\": \"https://img.buzzfeed.com/buzzfeed-static/static/2015-05/5/11/campaign_images/webdr03/18-times-kitty-forman-was-the-sassiest-mom-on-the-2-4501-1430841490-17_dblbig.jpg\",\n        \"name\": \"Kitty Forman\"\n      },\n      {\n        \"id\": 7,\n        \"src\": \"https://www.thedad.com/wp-content/uploads/2018/10/Screen-Shot-2018-10-19-at-12.26.04-PM.png?w=640\",\n        \"name\": \"Red Forman\"\n      },\n      {\n        \"id\": 8,\n        \"src\": \"https://i.pinimg.com/originals/57/6d/48/576d483cb679e8b1060406a135dc084b.jpg\",\n        \"name\": \"Bob Pinciotti\"\n      },\n      {\n        \"id\": 9,\n        \"src\": \"https://pbs.twimg.com/profile_images/522207501656539138/qxEyHv5I_400x400.jpeg\",\n        \"name\": \"Michael Kelso\"\n      },\n      {\n        \"id\": 10,\n        \"src\": \"https://vignette.wikia.nocookie.net/that70sshow/images/0/0c/Eric.jpg/revision/latest/top-crop/width/240/height/240?cb=20160617210320\",\n        \"name\": \"Eric Forman\"\n      },\n      {\n        \"id\": 11,\n        \"src\": \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRlf_Vq7XoNfUeqxyMvxDqcVXiQP88PqZShHUFnPl_RBJe7aiqa3A\",\n        \"name\": \"Leo\"\n      },\n      {\n        \"id\": 12,\n        \"src\": \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT6bKoeerbxGywYAmf1S9NaaJYQPQZkduSczFxy69LRRlt0OQQ\",\n        \"name\": \"Fez\"\n      }\n    ];\n    function randomInt(optArg= false) {\n      let x\n      if (optArg===false){\n        x= pics.length\n      }else{\n        x = optArg\n      }\n      return Math.floor(Math.random()*x);\n    } \n    let shuffled= [];\n    for(let i = randomInt(); i<pics.length; i= randomInt()){\n        shuffled.push(pics[i]);\n        pics.splice(i,1)\n    }\n   \n    for(let i=0; i<this.state.isClicked.length; i++){\n      if(this.state.isClicked[i]=== id){\n        var newTopScore;\n        let newResponse = \"wrong...\";\n        let clicked= [13];\n        console.log(this.state.topScore)\n        this.state.score> this.state.topScore? newTopScore = this.state.score: console.log(\"you suck\")\n        let newScore= 0;\n        //console.log(newTopScore)\n        this.setState({\n          shuffledPics: shuffled,\n          isClicked: clicked,\n          score: newScore,\n          topScore: newTopScore,\n          response: newResponse\n        })\n        return console.log(\"you lost\")\n      }else{\n        let clicked= this.state.isClicked.concat(id)\n        let newScore= this.state.score+1;\n        let newTopScore= this.state.topScore;\n        let newResponse = \"correct!\";\n        this.setState({\n          shuffledPics: shuffled,\n          isClicked: clicked,\n          score: newScore,\n          topScore: newTopScore,\n          response: newResponse\n        })\n      } \n    }\n \n  }\n\n  render(){\n    return (\n      <div>\n          <Navbar style={{flex:1}}score= {this.state.score} topScore= {this.state.topScore} response= {this.state.response}/>\n          <Jumbotron/>\n          <Wrapper>\n            {this.state.shuffledPics.map(picture => (\n              <Pictures\n                clicked= {this.Clicked}\n                id = {picture.id}\n                name= {picture.name}\n                image= {picture.src}\n              />\n            ))}\n          </Wrapper>\n          <Footer/>\n      </div>\n    );\n  } \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}